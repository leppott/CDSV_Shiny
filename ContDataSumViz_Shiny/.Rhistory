ContData.env$myName.YrMo     <- "YearMonth"
ContData.env$myName.Mo       <- "Month"
ContData.env$myName.MoDa     <- "MonthDay"
ContData.env$myName.JuDa     <- "JulianDay"
ContData.env$myName.Day      <- "Day"
ContData.env$myName.Season   <- "Season"
ContData.env$myName.YrSeason <- "YearSeason"
#
# load data (data.frame or from CSV)
# if no data frame then import file.
if (!is.null(df.input)) {##IF.START
data.import <- df.input
} else {
data.import <- utils::read.csv(file.path(dir.input, file.input))
}##IF.END
#
# Site Names (Columns)
#Col.Sites <- names(data.import)[!(names(data.import) %in% ContData.env$myName.Date)]
data.plot <- reshape2::melt(data.import,"Date")
# Add columns for time periods
# add Year, Month, Season, YearSeason (names are in config.R)
# assume Date is POSIXct
#
# add time period fields
data.import[,ContData.env$myName.Yr]   <- format(as.Date(data.import[
, ContData.env$myName.Date]),format="%Y")
data.import[,ContData.env$myName.Mo]   <- format(as.Date(data.import[
, ContData.env$myName.Date]),format="%m")
data.import[,ContData.env$myName.YrMo] <- format(as.Date(data.import[
, ContData.env$myName.Date]),format="%Y%m")
data.import[,ContData.env$myName.MoDa] <- format(as.Date(data.import[
, ContData.env$myName.Date]),format="%m%d")
# data.import[,ContData.env$myName.JuDa] <- as.POSIXlt(data.import[
#,ContData.env$myName.Date], format=ContData.env$myFormat.Date)$yday +1
# ## add Season fields
data.import[,ContData.env$myName.Season] <- NA
data.import[,ContData.env$myName.Season][as.numeric(data.import[
, ContData.env$myName.MoDa]) >= as.numeric("0101") & as.numeric(data.import[
, ContData.env$myName.MoDa])<
as.numeric(ContData.env$myTimeFrame.Season.Spring.Start)] <- "Winter"
data.import[,ContData.env$myName.Season][as.numeric(data.import[
, ContData.env$myName.MoDa]) >=
as.numeric(ContData.env$myTimeFrame.Season.Spring.Start) &
as.numeric(data.import[,ContData.env$myName.MoDa])<
as.numeric(ContData.env$myTimeFrame.Season.Summer.Start)] <- "Spring"
data.import[,ContData.env$myName.Season][as.numeric(data.import[
, ContData.env$myName.MoDa]) >=
as.numeric(ContData.env$myTimeFrame.Season.Summer.Start) &
as.numeric(data.import[,ContData.env$myName.MoDa])<
as.numeric(ContData.env$myTimeFrame.Season.Fall.Start)] <- "Summer"
data.import[,ContData.env$myName.Season][as.numeric(data.import[
, ContData.env$myName.MoDa]) >=
as.numeric(ContData.env$myTimeFrame.Season.Fall.Start) &
as.numeric(data.import[,ContData.env$myName.MoDa])<
as.numeric(ContData.env$myTimeFrame.Season.Winter.Start)] <- "Fall"
data.import[,ContData.env$myName.Season][as.numeric(data.import[
, ContData.env$myName.MoDa]) >=
as.numeric(ContData.env$myTimeFrame.Season.Winter.Start) &
as.numeric(data.import[,ContData.env$myName.MoDa])<=
as.numeric("1231")] <- "Winter"
data.import[,ContData.env$myName.YrSeason] <- paste(data.import[
, ContData.env$myName.Yr],data.import[,ContData.env$myName.Season], sep="")
# Remove bad date records
data.import <- data.import[!is.na(data.import[,ContData.env$myName.Yr]),]
# rectify December as part of winter of year + 1
mySelection <- data.import[,ContData.env$myName.Mo]=="12"
if(sum(mySelection) != 0){##IF.sum.START
data.import[, ContData.env$myName.YrSeason][mySelection] <- paste(
as.numeric(data.import[, ContData.env$myName.Yr]) + 1
, data.import[, ContData.env$myName.Season],sep="")
}##IF.sum.END
# The palette with grey:
cbPalette <- c("#999999", "#E69F00", "#56B4E9", "#009E73", "#F0E442"
, "#0072B2", "#D55E00", "#CC79A7")
# The palette with black:
#cbbPalette <- c("#000000", "#E69F00", "#56B4E9", "#009E73", "#F0E442"
# , "#0072B2", "#D55E00", "#CC79A7")
#
myColors <- cbPalette #rainbow(length(Col.Sites))
#
# Season Names
SeasonNames <- c("Fall", "Winter", "Spring","Summer")
## revised the plot to a ggplot
print(colnames(data.plot))
p <- ggplot()+
geom_histogram(data=data.import[colnames(data.import) %in% hist.columnName],aes(x=!!sym(hist.columnName),y=stat(count)/sum(stat(count))),color="black",fill="white",binwidth=1)+
geom_density(data=data.plot,aes(x=value,colour=variable),size=1)+
labs(x=ParamName.xlab,y="Proportion = value")+
theme(text=element_text(size=14,face = "bold", color="blue"),
legend.position = "right",
legend.title=element_blank(),
panel.grid.major.y=element_blank())
return(p);
}
rm(list=ls())
shiny::runApp()
return(p);
runApp()
rm(list=ls())
runApp()
shiny::runApp()
source("~/FY22_projects/CYANOHAB/Task_4_R_Shiny_for_RMNs/ContDataSumViz_Shiny/CompSiteCDF_updated.R")
runApp()
source("~/FY22_projects/CYANOHAB/Task_4_R_Shiny_for_RMNs/ContDataSumViz_Shiny/CompSiteCDF_updated.R")
return(p);
runApp()
source("~/FY22_projects/CYANOHAB/Task_4_R_Shiny_for_RMNs/ContDataSumViz_Shiny/CompSiteCDF_updated.R")
runApp()
source("~/FY22_projects/CYANOHAB/Task_4_R_Shiny_for_RMNs/ContDataSumViz_Shiny/CompSiteCDF_updated.R")
runApp()
source("~/FY22_projects/CYANOHAB/Task_4_R_Shiny_for_RMNs/ContDataSumViz_Shiny/CompSiteCDF_updated.R")
runApp()
source("~/FY22_projects/CYANOHAB/Task_4_R_Shiny_for_RMNs/ContDataSumViz_Shiny/CompSiteCDF_updated.R")
source("~/FY22_projects/CYANOHAB/Task_4_R_Shiny_for_RMNs/ContDataSumViz_Shiny/CompSiteCDF_updated.R")
p <- ggplot(data=data.plot,aes(x=value,y=stat(density),colour=variable))+
geom_line(stat="density")+
geom_histogram(data=data.import[colnames(data.import) %in% hist.columnName],aes(x=!!sym(hist.columnName),y=stat(count)/sum(stat(count))),color="black",fill="white",binwidth=1)+
#geom_density(data=data.plot,aes(x=value,colour=variable),size=1)+
labs(x=ParamName.xlab,y="Proportion = value")+
theme(text=element_text(size=14,face = "bold", color="blue"),
plot.title = element_text(hjust=0.5),
legend.position = "right",
legend.title=element_blank(),
panel.grid.major.y=element_blank())+
scale_color_viridis_d(option="D")+
ggtitle(Plot.title)
runApp()
source("~/FY22_projects/CYANOHAB/Task_4_R_Shiny_for_RMNs/ContDataSumViz_Shiny/CompSiteCDF_updated.R")
runApp()
library(gridExtra)
install.packages("gridExtra")
library(gridExtra)
runApp()
source("~/FY22_projects/CYANOHAB/Task_4_R_Shiny_for_RMNs/ContDataSumViz_Shiny/CompSiteCDF_updated.R")
runApp()
runApp()
source("~/FY22_projects/CYANOHAB/Task_4_R_Shiny_for_RMNs/ContDataSumViz_Shiny/CompSiteCDF_updated.R")
help(stat_ecdf)
source("~/FY22_projects/CYANOHAB/Task_4_R_Shiny_for_RMNs/ContDataSumViz_Shiny/CompSiteCDF_updated.R")
source("~/FY22_projects/CYANOHAB/Task_4_R_Shiny_for_RMNs/ContDataSumViz_Shiny/CompSiteCDF_updated.R")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
shiny::runApp()
runApp()
source("./SumStats.updated.R")
fun.myFile <- "DATA_test2_Aw_20130101_20141231.csv"
fun.myDir.import <- file.path("./","ContDataQC_test_data")
fun.myParam.Name <- c("Water.Temp.C", "Sensor.Depth.ft")
fun.myDateTime.Name <- "Date.Time"
fun.myDateTime.Format <- NA
fun.myThreshold <- 20
fun.myConfig <- ""
test <- SumStats.updated(fun.myFile = fun.myFile,fun.myDir.import = fun.myDir.import,fun.myParam.Name = fun.myParam.Name,fun.myDateTime.Name=fun.myDateTime.Name,fun.myDateTime.Format = "%Y-%m-%d %H:%M:%S",fun.myThreshold = 20,fun.myConfig = "")
source("~/FY22_projects/CYANOHAB/Task_4_R_Shiny_for_RMNs/ContDataSumViz_Shiny/SumStats.updated.R")
test <- SumStats.updated(fun.myFile = fun.myFile,fun.myDir.import = fun.myDir.import,fun.myParam.Name = fun.myParam.Name,fun.myDateTime.Name=fun.myDateTime.Name,fun.myDateTime.Format = "%Y-%m-%d %H:%M:%S",fun.myThreshold = 20,fun.myConfig = "")
source("~/FY22_projects/CYANOHAB/Task_4_R_Shiny_for_RMNs/ContDataSumViz_Shiny/SumStats.updated.R")
test <- SumStats.updated(fun.myFile = fun.myFile,fun.myDir.import = fun.myDir.import,fun.myParam.Name = fun.myParam.Name,fun.myDateTime.Name=fun.myDateTime.Name,fun.myDateTime.Format = "%Y-%m-%d %H:%M:%S",fun.myThreshold = 20,fun.myConfig = "")
source("~/FY22_projects/CYANOHAB/Task_4_R_Shiny_for_RMNs/ContDataSumViz_Shiny/SumStats.updated.R")
test <- SumStats.updated(fun.myFile = fun.myFile,fun.myDir.import = fun.myDir.import,fun.myParam.Name = fun.myParam.Name,fun.myDateTime.Name=fun.myDateTime.Name,fun.myDateTime.Format = "%Y-%m-%d %H:%M:%S",fun.myThreshold = 20,fun.myConfig = "")
source("~/FY22_projects/CYANOHAB/Task_4_R_Shiny_for_RMNs/ContDataSumViz_Shiny/SumStats.updated.R")
test <- SumStats.updated(fun.myFile = fun.myFile,fun.myDir.import = fun.myDir.import,fun.myParam.Name = fun.myParam.Name,fun.myDateTime.Name=fun.myDateTime.Name,fun.myDateTime.Format = "%Y-%m-%d %H:%M:%S",fun.myThreshold = 20,fun.myConfig = "")
test_1 <- test[[1]]
class(test_1)
View(test_1)
names(test)
rm(list=ls())
source("~/FY22_projects/CYANOHAB/Task_4_R_Shiny_for_RMNs/ContDataSumViz_Shiny/SumStats.updated.R")
test <- SumStats.updated(fun.myFile = fun.myFile,fun.myDir.import = fun.myDir.import,fun.myParam.Name = fun.myParam.Name,fun.myDateTime.Name=fun.myDateTime.Name,fun.myDateTime.Format = "%Y-%m-%d %H:%M:%S",fun.myThreshold = 20,fun.myConfig = "")
getwd()
test <- SumStats.updated(fun.myFile = fun.myFile,fun.myDir.import = fun.myDir.import,fun.myParam.Name = fun.myParam.Name,fun.myDateTime.Name=fun.myDateTime.Name,fun.myDateTime.Format = "%Y-%m-%d %H:%M:%S",fun.myThreshold = 20,fun.myConfig = "")
source("~/FY22_projects/CYANOHAB/Task_4_R_Shiny_for_RMNs/ContDataSumViz_Shiny/SumStats.updated.R")
getwd()
fun.myFile <- "DATA_test2_Aw_20130101_20141231.csv"
fun.myDir.import <- file.path("./","ContDataQC_test_data")
fun.myParam.Name <- c("Water.Temp.C", "Sensor.Depth.ft")
fun.myDateTime.Name <- "Date.Time"
test <- SumStats.updated(fun.myFile = fun.myFile,fun.myDir.import = fun.myDir.import,fun.myParam.Name = fun.myParam.Name,fun.myDateTime.Name=fun.myDateTime.Name,fun.myDateTime.Format = "%Y-%m-%d %H:%M:%S",fun.myThreshold = 20,fun.myConfig = "")
source("~/FY22_projects/CYANOHAB/Task_4_R_Shiny_for_RMNs/ContDataSumViz_Shiny/SumStats.updated.R")
test <- SumStats.updated(fun.myFile = fun.myFile,fun.myDir.import = fun.myDir.import,fun.myParam.Name = fun.myParam.Name,fun.myDateTime.Name=fun.myDateTime.Name,fun.myDateTime.Format = "%Y-%m-%d %H:%M:%S",fun.myThreshold = 20,fun.myConfig = "")
names(test)
source("~/FY22_projects/CYANOHAB/Task_4_R_Shiny_for_RMNs/ContDataSumViz_Shiny/SumStats.updated.R")
test <- SumStats.updated(fun.myFile = fun.myFile,fun.myDir.import = fun.myDir.import,fun.myParam.Name = fun.myParam.Name,fun.myDateTime.Name=fun.myDateTime.Name,fun.myDateTime.Format = "%Y-%m-%d %H:%M:%S",fun.myThreshold = 20,fun.myConfig = "")
names(test)
source("~/FY22_projects/CYANOHAB/Task_4_R_Shiny_for_RMNs/ContDataSumViz_Shiny/SumStats.updated.R")
source("~/FY22_projects/CYANOHAB/Task_4_R_Shiny_for_RMNs/ContDataSumViz_Shiny/SumStats.updated.R")
test <- SumStats.updated(fun.myFile = fun.myFile,fun.myDir.import = fun.myDir.import,fun.myParam.Name = fun.myParam.Name,fun.myDateTime.Name=fun.myDateTime.Name,fun.myDateTime.Format = "%Y-%m-%d %H:%M:%S",fun.myThreshold = 20,fun.myConfig = "")
names(test)
source("~/FY22_projects/CYANOHAB/Task_4_R_Shiny_for_RMNs/ContDataSumViz_Shiny/SumStats.updated.R")
test <- SumStats.updated(fun.myFile = fun.myFile,fun.myDir.import = fun.myDir.import,fun.myParam.Name = fun.myParam.Name,fun.myDateTime.Name=fun.myDateTime.Name,fun.myDateTime.Format = "%Y-%m-%d %H:%M:%S",fun.myThreshold = 20,fun.myConfig = "")
source("~/FY22_projects/CYANOHAB/Task_4_R_Shiny_for_RMNs/ContDataSumViz_Shiny/SumStats.updated.R")
test <- SumStats.updated(fun.myFile = fun.myFile,fun.myDir.import = fun.myDir.import,fun.myParam.Name = fun.myParam.Name,fun.myDateTime.Name=fun.myDateTime.Name,fun.myDateTime.Format = "%Y-%m-%d %H:%M:%S",fun.myThreshold = 20,fun.myConfig = "")
names(test)
source("~/FY22_projects/CYANOHAB/Task_4_R_Shiny_for_RMNs/ContDataSumViz_Shiny/SumStats.updated.R")
test <- SumStats.updated(fun.myFile = fun.myFile,fun.myDir.import = fun.myDir.import,fun.myParam.Name = fun.myParam.Name,fun.myDateTime.Name=fun.myDateTime.Name,fun.myDateTime.Format = "%Y-%m-%d %H:%M:%S",fun.myThreshold = 20,fun.myConfig = "")
names(test)
test_1<-test$Water.Temp.C
class(test_1)
source("~/FY22_projects/CYANOHAB/Task_4_R_Shiny_for_RMNs/ContDataSumViz_Shiny/SumStats.updated.R")
source("./config.R")
fun.myFile <- "DATA_test2_Aw_20130101_20141231.csv"
fun.myDir.import <- file.path("./","ContDataQC_test_data")
fun.myParam.Name <- c("Water.Temp.C", "Sensor.Depth.ft")
test <- SumStats.updated(fun.myFile = fun.myFile,fun.myDir.import = fun.myDir.import,fun.myParam.Name = fun.myParam.Name,fun.myDateTime.Name = "Date.Time",fun.myDateTime.Format = "%Y-%m-%d %H:%M:%S",fun.myThreshold = 20,fun.myConfig = "")
names(test)
test1 <- test$Water.Temp.C
View(test1)
test <- SumStats.updated(fun.myFile = fun.myFile,fun.myDir.import = fun.myDir.import,fun.myParam.Name =c("Water.Temp.C","Air.Temp.C" "Sensor.Depth.ft"),fun.myDateTime.Name = "Date.Time",fun.myDateTime.Format = "%Y-%m-%d %H:%M:%S",fun.myThreshold = 20,fun.myConfig = "")
test <- SumStats.updated(fun.myFile = fun.myFile,fun.myDir.import = fun.myDir.import,fun.myParam.Name =c("Water.Temp.C","Air.Temp.C","Sensor.Depth.ft"),fun.myDateTime.Name = "Date.Time",fun.myDateTime.Format = "%Y-%m-%d %H:%M:%S",fun.myThreshold = 20,fun.myConfig = "")
ContData.env$myFlagVal.Fail    <- "FF"
test <- SumStats.updated(fun.myFile = fun.myFile,fun.myDir.import = fun.myDir.import,fun.myParam.Name =c("Water.Temp.C","Air.Temp.C","Sensor.Depth.ft"),fun.myDateTime.Name = "Date.Time",fun.myDateTime.Format = "%Y-%m-%d %H:%M:%S",fun.myThreshold = 20,fun.myConfig = "")
source("~/FY22_projects/CYANOHAB/Task_4_R_Shiny_for_RMNs/ContDataSumViz_Shiny/SumStats.updated.R")
rm("test","test1")
source("~/FY22_projects/CYANOHAB/Task_4_R_Shiny_for_RMNs/ContDataSumViz_Shiny/CompSiteCDF_updated.R")
df_data <- read.csv("./ContDataQC_test_data/PRLN-626-S.csv")
df_data$Date <- paste0("2020-0", substr(df_data$MonthDay, 1, 1), "-", substr(df_data$MonthDay, 2, 3))
df_data <- df_data[, c(21, 2:(myCols-1))]
myCols <- ncol(df_data)
df_data <- df_data[, c(21, 2:(myCols-1))]
my_plot <- CompSiteCDF_updated(file.input = NULL
, dir.input = getwd()
, dir.output = getwd()
, ParamName.xlab = input$CDF_xlab
, Plot.title = input$CDF_title
, Plot.type = "Density"
, Plot.season = "Summer"
, hist.columnName = input$CDF_hist_column_name
, df.input = df_data)
library(ggplot2)
my_plot <- CompSiteCDF_updated(file.input = NULL
, dir.input = getwd()
, dir.output = getwd()
, ParamName.xlab = input$CDF_xlab
, Plot.title = input$CDF_title
, Plot.type = "Density"
, Plot.season = "Summer"
, hist.columnName = input$CDF_hist_column_name
, df.input = df_data)
output$plot_density <- renderPlotly({
my_plot <- CompSiteCDF_updated(file.input = NULL
, dir.input = getwd()
, dir.output = getwd()
, ParamName.xlab = " " #input$CDF_xlab
, Plot.title = " " #input$CDF_title
, Plot.type = "Density"
, Plot.season = "Summer"
, hist.columnName = "x2001" #input$CDF_hist_column_name
, df.input = df_data)
})
my_plot <- CompSiteCDF_updated(file.input = NULL
, dir.input = getwd()
, dir.output = getwd()
, ParamName.xlab = " " #input$CDF_xlab
, Plot.title = " " #input$CDF_title
, Plot.type = "Density"
, Plot.season = "Summer"
, hist.columnName = "x2001" #input$CDF_hist_column_name
, df.input = df_data)
load("~/FY22_projects/CYANOHAB/Task_4_R_Shiny_for_RMNs/ContDataSumViz_Shiny/test_data_plot_for_season.RData")
View(data.plot)
source("~/FY22_projects/CYANOHAB/Task_4_R_Shiny_for_RMNs/ContDataSumViz_Shiny/CompSiteCDF_updated.R")
rm(data.plot)
rm(df_data)
rm(my_plot)
shiny::runApp()
source("~/FY22_projects/CYANOHAB/Task_4_R_Shiny_for_RMNs/ContDataSumViz_Shiny/CompSiteCDF_updated.R")
runApp()
runApp()
load("~/FY22_projects/CYANOHAB/Task_4_R_Shiny_for_RMNs/ContDataSumViz_Shiny/test_plot_CDF.RData")
View(my_plot)
print(my_plot)
my_plot$data$variable
source("~/FY22_projects/CYANOHAB/Task_4_R_Shiny_for_RMNs/ContDataSumViz_Shiny/CompSiteCDF_updated.R")
rm(my_plot)
runApp()
load("~/FY22_projects/CYANOHAB/Task_4_R_Shiny_for_RMNs/ContDataSumViz_Shiny/test_plot_CDF.RData")
test <- my_plot$data
View(test)
source("~/FY22_projects/CYANOHAB/Task_4_R_Shiny_for_RMNs/ContDataSumViz_Shiny/CompSiteCDF_updated.R")
rm(my_plot)
rm(test)
runApp()
load("~/FY22_projects/CYANOHAB/Task_4_R_Shiny_for_RMNs/ContDataSumViz_Shiny/test_plot_CDF.RData")
source("~/FY22_projects/CYANOHAB/Task_4_R_Shiny_for_RMNs/ContDataSumViz_Shiny/CompSiteCDF_updated.R")
runApp()
source("~/FY22_projects/CYANOHAB/Task_4_R_Shiny_for_RMNs/ContDataSumViz_Shiny/CompSiteCDF_updated.R")
rm(my_plot)
runApp()
runApp()
load("~/FY22_projects/CYANOHAB/Task_4_R_Shiny_for_RMNs/ContDataSumViz_Shiny/test_plot_CDF.RData")
test <- my_plot$data
View(test)
View(test)
load("~/FY22_projects/CYANOHAB/Task_4_R_Shiny_for_RMNs/ContDataSumViz_Shiny/test_plot_CDF.RData")
print(my_plot)
rm(my_plot)
rm(test)
runApp()
source("~/FY22_projects/CYANOHAB/Task_4_R_Shiny_for_RMNs/ContDataSumViz_Shiny/CompSiteCDF_updated.R")
runApp()
load("~/FY22_projects/CYANOHAB/Task_4_R_Shiny_for_RMNs/ContDataSumViz_Shiny/test_plot_CDF.RData")
print(my_plot)
test <- my_plot$data
View(my_plot)
installed.packages()
library(ContDataQC)
remove.packages("ContDataQC")
devtools::install_github("leppott/ContDataQC")  ## devtools::install_github("leppott/ContDataQC",Force=TRUE,build_vignettes = TRUE)
devtools::install_github("leppott/ContDataQC")
shiny::runApp()
runApp()
ls("package:ContDataQC")
lsf.str("package:ContDataQC")
runApp()
runApp()
runApp()
load("~/FY22_projects/CYANOHAB/Task_4_R_Shiny_for_RMNs/ContDataSumViz_Shiny/test_dailyStats.RData")
myData <- dailyStats[[1]]
View(myData)
rm(dailyStats)
rm(myData)
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
load("~/FY22_projects/CYANOHAB/Task_4_R_Shiny_for_RMNs/ContDataSumViz_Shiny/test_dailyStats.RData")
data_to_plot <- dailyStats[[1]]
time_min <- min(as.POSIXct.Date(data_to_plot$Date,format="%Y-%m-%d))
)
)
load("~/FY22_projects/CYANOHAB/Task_4_R_Shiny_for_RMNs/ContDataSumViz_Shiny/test_dailyStats.RData")
data_to_plot <- dailyStats[[1]]
min_time <- diff.Date(max(data_to_plot$Date,format="%Y-%m-%d")-min(data_to_plot$Date,format="%Y-%m-%d"))
min_time <- diff.Date(max(as.POSIXct(data_to_plot$Date,format="%Y-%m-%d"))-min(as.POSIXct(data_to_plot$Date,format="%Y-%m-%d")))
min_time
View(data_to_plot)
min_time <- diff(max(as.POSIXct(data_to_plot$Date,format="%Y-%m-%d"))-min(as.POSIXct(data_to_plot$Date,format="%Y-%m-%d")))
min_time
max(as.POSIXct(data_to_plot$Date,format="%Y-%m-%d"))
min(as.POSIXct(data_to_plot$Date,format="%Y-%m-%d"))
test_diff <- as.numeric(min_time)
min_time <- difftime(max(as.POSIXct(data_to_plot$Date,format="%Y-%m-%d"))-min(as.POSIXct(data_to_plot$Date,format="%Y-%m-%d")))
min_time <- diff.difftime(max(as.POSIXct(data_to_plot$Date,format="%Y-%m-%d"))-min(as.POSIXct(data_to_plot$Date,format="%Y-%m-%d")))
min_time
as.numric(min_time)
as.numeric(min_time)
min_time <- difftime(max(as.POSIXct(data_to_plot$Date,format="%Y-%m-%d")),min(as.POSIXct(data_to_plot$Date,format="%Y-%m-%d")),units="days")
min_time
test_true <- min_time>30
rm(list=ls())
shiny::runApp()
load("~/FY22_projects/CYANOHAB/Task_4_R_Shiny_for_RMNs/ContDataSumViz_Shiny/test_selected_raw_data.RData")
View(all_raw_selected_to_plot)
rm(list=ls())
runApp()
runApp()
runApp()
load("~/FY22_projects/CYANOHAB/Task_4_R_Shiny_for_RMNs/ContDataSumViz_Shiny/test_dailyStats.RData")
test <- dailyStats[[1]]
View(test)
source("~/FY22_projects/CYANOHAB/Task_4_R_Shiny_for_RMNs/update_ContDataQC/SumStats.updated.R")
rm(dailyStats)
rm(test)
runApp()
source("~/FY22_projects/CYANOHAB/Task_4_R_Shiny_for_RMNs/update_ContDataQC/SumStats.updated.R")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
install.packages("data.table")
install.packages("data.table")
shiny::runApp()
load("~/FY22_projects/CYANOHAB/Task_4_R_Shiny_for_RMNs/ContDataSumViz_Shiny/test_selected_raw_data.RData")
View(all_raw_selected_to_plot)
rm(list=ls())
runApp()
runApp()
load("~/FY22_projects/CYANOHAB/Task_4_R_Shiny_for_RMNs/ContDataSumViz_Shiny/test_loaded_data.RData")
View(my_data)
load("~/FY22_projects/CYANOHAB/Task_4_R_Shiny_for_RMNs/ContDataSumViz_Shiny/test_selected_raw_data.RData")
View(all_raw_selected_to_plot)
View(my_data)
rm(all_raw_selected_to_plot)
rm(my_data)
runApp()
load("~/FY22_projects/CYANOHAB/Task_4_R_Shiny_for_RMNs/ContDataSumViz_Shiny/test_all_raw_selected.RData")
View(all_raw_selected)
load("~/FY22_projects/CYANOHAB/Task_4_R_Shiny_for_RMNs/ContDataSumViz_Shiny/test_loaded_data.RData")
View(my_data)
max(my_data$Water.Temp.C)
min(my_data$Water.Temp.C)
max(my_data$Date.Time)
min(my_data$Date.Time)
View(my_data)
test <- my_data[,(names(my_data) %in% "Date.Time")]
names(my_data)
names(my_data) %in% "Date.Time"
class(my_data)
test <- my_data[,(names(my_data) %in% "Date.Time")]
test
test <- my_data[names(my_data) %in% "Date.Time"]
source("~/FY22_projects/CYANOHAB/Task_4_R_Shiny_for_RMNs/ContDataSumViz_Shiny/import_raw_data.R")
rm(all_raw_selected)
rm(my_data)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
# function inputs
runApp()
source("~/FY22_projects/CYANOHAB/Task_4_R_Shiny_for_RMNs/update_ContDataQC/ReportMetaData.R")
source("~/FY22_projects/CYANOHAB/Task_4_R_Shiny_for_RMNs/update_ContDataQC/ReportMetaData.R")
runApp()
runApp()
source("~/FY22_projects/CYANOHAB/Task_4_R_Shiny_for_RMNs/update_ContDataQC/ReportMetaData.R")
source("~/FY22_projects/CYANOHAB/Task_4_R_Shiny_for_RMNs/update_ContDataQC/ReportMetaData.R")
runApp()
source("~/FY22_projects/CYANOHAB/Task_4_R_Shiny_for_RMNs/update_ContDataQC/ReportMetaData.R")
runApp()
source("~/FY22_projects/CYANOHAB/Task_4_R_Shiny_for_RMNs/update_ContDataQC/ReportMetaData.R")
runApp()
library(dplyr)
runApp()
source("~/FY22_projects/CYANOHAB/Task_4_R_Shiny_for_RMNs/update_ContDataQC/ReportMetaData.R")
source("~/FY22_projects/CYANOHAB/Task_4_R_Shiny_for_RMNs/update_ContDataQC/ReportMetaData.R")
install.packages("tidyverse")
runApp()
source("~/FY22_projects/CYANOHAB/Task_4_R_Shiny_for_RMNs/update_ContDataQC/ReportMetaData.R")
runApp()
load("~/FY22_projects/CYANOHAB/Task_4_R_Shiny_for_RMNs/ContDataSumViz_Shiny/test_dailyCheck.RData")
test <- dailyCheck[[1]]
View(test)
source("~/FY22_projects/CYANOHAB/Task_4_R_Shiny_for_RMNs/update_ContDataQC/ReportMetaData.R")
source("~/FY22_projects/CYANOHAB/Task_4_R_Shiny_for_RMNs/update_ContDataQC/ReportMetaData.R")
rm(dailyCheck,test)
runApp()
load("~/FY22_projects/CYANOHAB/Task_4_R_Shiny_for_RMNs/ContDataSumViz_Shiny/test_dailyCheck.RData")
test <- dailyCheck[[1]]
View(test)
runApp()
load("~/FY22_projects/CYANOHAB/Task_4_R_Shiny_for_RMNs/ContDataSumViz_Shiny/test_dailyCheck.RData")
test2 <- dailyCheck[[1]]
View(test2)
sum(is.na(test2$sumNA))
rm(dailyCheck,test,test2)
runApp()
load("~/FY22_projects/CYANOHAB/Task_4_R_Shiny_for_RMNs/ContDataSumViz_Shiny/test_dailyCheck.RData")
test <- dailyCheck[[1]]
View(test)
test$sumNA>0
runApp()
load("~/FY22_projects/CYANOHAB/Task_4_R_Shiny_for_RMNs/ContDataSumViz_Shiny/test_dailyCheck.RData")
test <- dailyCheck[[1]]
View(test)
runApp()
load("~/FY22_projects/CYANOHAB/Task_4_R_Shiny_for_RMNs/ContDataSumViz_Shiny/test_dailyCheck.RData")
test <- dailyCheck[[1]]
View(test)
source("~/FY22_projects/CYANOHAB/Task_4_R_Shiny_for_RMNs/update_ContDataQC/ReportMetaData.R")
runApp()
load("~/FY22_projects/CYANOHAB/Task_4_R_Shiny_for_RMNs/ContDataSumViz_Shiny/test_dailyCheck.RData")
test <- dailyCheck[[1]]
View(test)
test2 <- dailyCheck[[2]]
View(test2)
load("~/FY22_projects/CYANOHAB/Task_4_R_Shiny_for_RMNs/ContDataSumViz_Shiny/test_all_raw_selected.RData")
View(all_raw_selected)
sum(is.na(all_raw_selected$Water.LoggerID))
rm(list=ls())
shiny::runApp()
runApp()
